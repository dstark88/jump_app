{"ast":null,"code":"import _defineProperty from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\src\\\\pages\\\\Todos\\\\Todos.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport CheckedBtn from \"../../components/CheckedBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, FormBtn } from \"../../components/Form\"; // import { clone } from \"@babel/types\";\n\nvar Todos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Todos, _Component);\n\n  function Todos() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Todos);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Todos)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todos: [],\n      id: \"\",\n      done: {\n        type: Boolean,\n        default: false\n      },\n      description: String\n    };\n\n    _this.loadTodos = function () {\n      API.getTodos().then(function (res) {\n        return _this.setState({\n          todos: res.data,\n          id: \"\",\n          done: \"\",\n          description: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleClickTodo = function (id) {\n      var todos = _this.state.todos;\n\n      for (var i = 0; i < todos.length; i++) {\n        if (todos[i].done === true) {\n          console.log(i, \"index of clicked\");\n          console.log(\"done:\", \"this.state.done\");\n\n          _this.setState({\n            done: true\n          });\n        } else {\n          _this.setState({\n            done: false\n          });\n        } // for (let j = 0; j < clone.length; j++) {\n        //   clone[j].beenClicked = false;\n        // }\n        // this.setState({\n        //   score: 0,\n        //   pictures: clone\n        // });\n        // } else {\n        //   this.setState({\n        //     score: this.state.score + 1,\n        //     pictures: clone,\n        //     message: \"You clicked correctly. Keep clicking!\"\n        //   });\n        // if (this.state.score === 11) {\n        //   this.setState({\n        //     bestScore: 12,\n        //     pictures: clone,\n        //     message:\"Wow! You are a master at memory games!\"\n        //   });\n        // for (let j = 0; j < clone.length; j++) {\n        //   clone[j].beenClicked = false;\n        // }\n        // this.setState({\n        //   score: 0,\n        //   pictures: clone,\n        // });\n        // }\n        // clone[i].beenClicked = true;\n\n      } // break;\n      // } \n      // }\n      // clone = clone.sort(() => Math.random() - 0.5);\n      // API.updateTodo(id)\n      // .then(res => this.loadTodos())\n      // .catch(err => console.log(err));\n      // var todos = [];\n      // for (let i = 0; i < todos.length; i++) {\n      //   if (todos[i].done === false) {\n      //     console.log(\"ive been clicked\");\n      //   }\n      // }\n\n    };\n\n    _this.deleteTodo = function (id) {\n      API.deleteTodo(id).then(function (res) {\n        return _this.loadTodos();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.description && _this.state.done) {\n        API.saveTodo({\n          id: _this.state.id,\n          done: false,\n          description: _this.state.description\n        }).then(function (res) {\n          return _this.loadTodos();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Todos, [{\n    key: \"componentDidMount\",\n    // When the component mounts, load all todos and save them to this.state.todos\n    value: function componentDidMount() {\n      this.loadTodos();\n    } // Loads all todos  and sets them to this.state.todos\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Add to your To Do List?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.id || \"\",\n        onChange: this.handleInputChange,\n        name: \"id\",\n        placeholder: \"id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), \"Enter Description\", React.createElement(Input, {\n        value: this.state.description || \"\",\n        onChange: this.handleInputChange,\n        name: \"description\",\n        placeholder: \"To Do Item (Required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), \"Done\", React.createElement(Input, {\n        type: \"text\",\n        value: this.state.done || \"\",\n        onChange: this.handleInputChange,\n        name: \"done\",\n        placeholder: \"Enter true or false?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !this.state.description && this.state.done,\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Submit To Do\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"My To Do List\")), this.state.todos.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.state.todos.map(function (todo) {\n        return React.createElement(ListItem, {\n          key: todo._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, _this2.state.todos.map(function (todo) {\n          return React.createElement(CheckedBtn, {\n            key: todo._id,\n            id: todo._id,\n            name: todo.done,\n            handleClickTodo: _this2.handleClickTodo,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          });\n        }), React.createElement(\"a\", {\n          href: \"/todos/\" + todo._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, \", \", todo.done, \", \", todo.description, \", \", todo.id)), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deleteTodo(todo._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Todos;\n}(Component);\n\nexport default Todos;","map":{"version":3,"sources":["c:\\Users\\stark\\Desktop\\Code\\codeChallenges\\jumpCloud\\jump_app\\client\\src\\pages\\Todos\\Todos.js"],"names":["React","Component","Jumbotron","DeleteBtn","CheckedBtn","API","Col","Row","Container","List","ListItem","Input","FormBtn","Todos","state","todos","id","done","type","Boolean","default","description","String","loadTodos","getTodos","then","res","setState","data","catch","err","console","log","handleClickTodo","i","length","deleteTodo","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveTodo","map","todo","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport CheckedBtn from \"../../components/CheckedBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, FormBtn } from \"../../components/Form\";\n// import { clone } from \"@babel/types\";\n\nclass Todos extends Component {\n  // Setting our component's initial state\n  state = {\n    todos: [],\n    id: \"\",\n    done: {type: Boolean,\n    default: false},\n    description: String\n  };\n\n  // When the component mounts, load all todos and save them to this.state.todos\n  componentDidMount() {\n    this.loadTodos();\n  }\n\n  // Loads all todos  and sets them to this.state.todos\n  loadTodos = () => {\n    API.getTodos()\n      .then(res =>\n        this.setState({ todos: res.data, id: \"\", done: \"\", description: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Marks as checked \n  handleClickTodo = id => {\n    var todos = this.state.todos\n\n    for (let i = 0; i < todos.length; i++) {\n        if (todos[i].done === true) {\n          console.log(i, \"index of clicked\");\n          console.log(\"done:\", \"this.state.done\");\n            this.setState({\n              done: true,\n            });\n          } else {\n            this.setState({\n              done: false,\n            });\n          }\n          // for (let j = 0; j < clone.length; j++) {\n          //   clone[j].beenClicked = false;\n          // }\n          // this.setState({\n          //   score: 0,\n          //   pictures: clone\n          // });\n        // } else {\n        //   this.setState({\n        //     score: this.state.score + 1,\n        //     pictures: clone,\n        //     message: \"You clicked correctly. Keep clicking!\"\n        //   });\n          // if (this.state.score === 11) {\n          //   this.setState({\n          //     bestScore: 12,\n          //     pictures: clone,\n          //     message:\"Wow! You are a master at memory games!\"\n          //   });\n            // for (let j = 0; j < clone.length; j++) {\n            //   clone[j].beenClicked = false;\n            // }\n            // this.setState({\n            //   score: 0,\n            //   pictures: clone,\n            // });\n          // }\n          // clone[i].beenClicked = true;\n        }\n        // break;\n      // } \n    // }\n    // clone = clone.sort(() => Math.random() - 0.5);\n\n\n    // API.updateTodo(id)\n    // .then(res => this.loadTodos())\n    // .catch(err => console.log(err));\n\n    // var todos = [];\n\n    // for (let i = 0; i < todos.length; i++) {\n    //   if (todos[i].done === false) {\n    //     console.log(\"ive been clicked\");\n    //   }\n    // }\n  };\n\n  // Deletes a todo from the database with a given id, then reloads todos from the db\n  deleteTodo = id => {\n    API.deleteTodo(id)\n      .then(res => this.loadTodos())\n      .catch(err => console.log(err));\n  };\n\n  // Handles updating component state when the user types into the input field\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  // When the form is submitted, use the API.saveTodo method to save the todo data\n  // Then reload todos from the database\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.description && this.state.done) {\n      API.saveTodo({\n        id: this.state.id,\n        done: false,\n        description: this.state.description\n      })\n        .then(res => this.loadTodos())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Add to your To Do List?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n                value={this.state.id || \"\"}\n                onChange={this.handleInputChange}\n                name=\"id\"\n                placeholder=\"id\"\n              />\n              Enter Description \n              <Input\n                value={this.state.description || \"\"}\n                onChange={this.handleInputChange}\n                name=\"description\"\n                placeholder=\"To Do Item (Required)\"\n              />\n              Done\n              <Input\n                type=\"text\"\n                value={this.state.done || \"\"}\n                onChange={this.handleInputChange}\n                name=\"done\"\n                placeholder=\"Enter true or false?\"\n              />\n              <FormBtn\n                disabled={!(this.state.description) && (this.state.done)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit To Do\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>My To Do List</h1>\n            </Jumbotron>\n            {this.state.todos.length ? (\n              <List>\n                {this.state.todos.map(todo => {\n                  return (\n                    <ListItem key={todo._id}>\n                    {this.state.todos.map(todo => (\n                      <CheckedBtn\n                        key={todo._id}\n                        id={todo._id}\n                        name={todo.done}\n                        handleClickTodo={this.handleClickTodo}\n                      />\n                    ))}\n                    {/* <CheckedBtn onClick={() => this.checkedTodo(todo._id)} /> */}\n                      <a href={\"/todos/\" + todo._id}>\n                        <strong>\n                          , {todo.done}, {todo.description}, {todo.id}\n                        </strong>\n                      </a>\n                      <DeleteBtn onClick={() => this.deleteTodo(todo._id)} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}