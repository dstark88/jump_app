{"ast":null,"code":"import _defineProperty from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\stark\\\\Desktop\\\\Code\\\\codeChallenges\\\\jumpCloud\\\\jump_app\\\\client\\\\src\\\\pages\\\\Todos\\\\Todos.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport CheckedBtn from \"../../components/CheckedBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, FormBtn } from \"../../components/Form\";\n\nvar Todos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Todos, _Component);\n\n  function Todos() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Todos);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Todos)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todos: [],\n      id: \"\",\n      done: \"\",\n      ddescription: \"\"\n    };\n\n    _this.loadTodos = function () {\n      API.getTodos().then(function (res) {\n        return _this.setState({\n          todos: res.data,\n          id: \"\",\n          done: \"\",\n          description: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.checkedTodo = function (id) {\n      API.updateTodo(id).then(function (res) {\n        return _this.loadTodos();\n      }).catch(function (err) {\n        return console.log(err);\n      }); // const todoItems = [];\n      // todos.forEach(todo => {\n      //   todoItems.push([\n      //     '<li>',\n      //       `<label for=\"${ todo.id }\">`,\n      //         `<input ${ todo.done ? 'checked' : '' } id=\"${ todo.id }\" type=\"checkbox\" />`,\n      //         todo.description,\n      //       '</label>',\n      //     '</li>',\n      //   ].join(''));\n      // });\n      // document.querySelector('#root').innerHTML = `<ul>${ todoItems.join('') }</ul>`;\n    };\n\n    _this.deleteTodo = function (id) {\n      API.deleteTodo(id).then(function (res) {\n        return _this.loadTodos();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.description) {\n        API.saveTodo({\n          // id: this.state.id,\n          // done: this.state.done,\n          description: _this.state.description\n        }).then(function (res) {\n          return _this.loadTodos();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Todos, [{\n    key: \"componentDidMount\",\n    // When the component mounts, load all todos and save them to this.state.todos\n    value: function componentDidMount() {\n      this.loadTodos();\n    } // Loads all todos  and sets them to this.state.todos\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Add to your To Do List?\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Enter Description\", React.createElement(Input, {\n        value: this.state.description,\n        onChange: this.handleInputChange,\n        name: \"description\",\n        placeholder: \"To Do Item (Required)\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.done,\n        onChange: this.handleInputChange,\n        name: \"done\",\n        placeholder: \"Enter True or False?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !this.state.description,\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Submit To Do\"))), React.createElement(Col, {\n        size: \"md-6 sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"My To Do List\")), this.state.todos.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.state.todos.map(function (todo) {\n        return React.createElement(ListItem, {\n          key: todo._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(CheckedBtn, {\n          onClick: function onClick() {\n            return _this2.checkedTodo(todo._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }), React.createElement(\"a\", {\n          href: \"/todos/\" + todo._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, todo.description)), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deleteTodo(todo._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"No Results to Display\"))));\n    }\n  }]);\n\n  return Todos;\n}(Component);\n\nexport default Todos;","map":{"version":3,"sources":["c:\\Users\\stark\\Desktop\\Code\\codeChallenges\\jumpCloud\\jump_app\\client\\src\\pages\\Todos\\Todos.js"],"names":["React","Component","Jumbotron","DeleteBtn","CheckedBtn","API","Col","Row","Container","List","ListItem","Input","FormBtn","Todos","state","todos","id","done","ddescription","loadTodos","getTodos","then","res","setState","data","description","catch","err","console","log","checkedTodo","updateTodo","deleteTodo","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveTodo","length","map","todo","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../../components/Jumbotron\";\nimport DeleteBtn from \"../../components/DeleteBtn\";\nimport CheckedBtn from \"../../components/CheckedBtn\";\nimport API from \"../../utils/API\";\nimport { Col, Row, Container } from \"../../components/Grid\";\nimport { List, ListItem } from \"../../components/List\";\nimport { Input, FormBtn } from \"../../components/Form\";\n\nclass Todos extends Component {\n  // Setting our component's initial state\n  state = {\n    todos: [],\n    id: \"\",\n    done: \"\",\n    ddescription: \"\"\n  };\n\n  // When the component mounts, load all todos and save them to this.state.todos\n  componentDidMount() {\n    this.loadTodos();\n  }\n\n  // Loads all todos  and sets them to this.state.todos\n  loadTodos = () => {\n    API.getTodos()\n      .then(res =>\n        this.setState({ todos: res.data, id: \"\", done: \"\", description: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  // Marks as checked \n  checkedTodo = id => {\n    API.updateTodo(id)\n    .then(res => this.loadTodos())\n    .catch(err => console.log(err));\n  \n\n\n    // const todoItems = [];\n  \n    // todos.forEach(todo => {\n    //   todoItems.push([\n    //     '<li>',\n    //       `<label for=\"${ todo.id }\">`,\n    //         `<input ${ todo.done ? 'checked' : '' } id=\"${ todo.id }\" type=\"checkbox\" />`,\n    //         todo.description,\n    //       '</label>',\n    //     '</li>',\n    //   ].join(''));\n    // });\n  \n    // document.querySelector('#root').innerHTML = `<ul>${ todoItems.join('') }</ul>`;\n  };\n\n  // Deletes a todo from the database with a given id, then reloads todos from the db\n  deleteTodo = id => {\n    API.deleteTodo(id)\n      .then(res => this.loadTodos())\n      .catch(err => console.log(err));\n  };\n\n  // Handles updating component state when the user types into the input field\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  // When the form is submitted, use the API.saveTodo method to save the todo data\n  // Then reload todos from the database\n  handleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.description) {\n      API.saveTodo({\n        // id: this.state.id,\n        // done: this.state.done,\n        description: this.state.description\n      })\n        .then(res => this.loadTodos())\n        .catch(err => console.log(err));\n    }\n  };\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>Add to your To Do List?</h1>\n            </Jumbotron>\n            <form>\n              {/* <Input\n                value={this.state.id}\n                onChange={this.handleInputChange}\n                name=\"id\"\n                placeholder=\"id\"\n              /> */}\n              Enter Description \n              <Input\n                value={this.state.description}\n                onChange={this.handleInputChange}\n                name=\"description\"\n                placeholder=\"To Do Item (Required)\"\n              />\n              \n              <Input\n                value={this.state.done}\n                onChange={this.handleInputChange}\n                name=\"done\"\n                placeholder=\"Enter True or False?\"\n              />\n              <FormBtn\n                disabled={!(this.state.description)}\n                onClick={this.handleFormSubmit}\n              >\n                Submit To Do\n              </FormBtn>\n            </form>\n          </Col>\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>My To Do List</h1>\n            </Jumbotron>\n            {this.state.todos.length ? (\n              <List>\n                {this.state.todos.map(todo => {\n                  return (\n                    <ListItem key={todo._id}>\n                    <CheckedBtn onClick={() => this.checkedTodo(todo._id)} />\n                      <a href={\"/todos/\" + todo._id}>\n                        <strong>\n                          {todo.description}\n                        </strong>\n                      </a>\n                      <DeleteBtn onClick={() => this.deleteTodo(todo._id)} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}